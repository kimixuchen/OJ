#include<iostream>  
#include<algorithm>
#define min(a,b) (a)<(b)?(a):(b)
using namespace std;
int main()
 {
     int T,n,i,time[1002],dp[1002];
     cin >>T;
     while(T--)
     {
         cin >> n;
         for(i=0;i<n;i++)
            cin >>time[i];
         sort(time,time + n);
         dp[0]=time[0] , dp[1]=time[1];
         for(i=2;i<n;i++)
    dp[i] = min(dp[i-2]+time[0]+time[i]+time[1]*2 , dp[i-1]+time[0]+time[i]);
         cout <<dp[n-1] << endl;        
     }
     return 0;    
}
容易发现dp[]里边只有i -2，i-1，i这三项，所以可以考虑用滚动数组，减少开支
#include<iostream>  
#include<algorithm>
#define min(a,b) (a)<(b)?(a):(b)
using namespace std;
int main()
{
     int T,n,i,time[1001],dp[3];
     cin >> T;
     while(T--)
     {
         cin >> n;
         for(i=0;i<n;i++)
            cin >>time[i];
         sort(time,time + n);
         dp[0]=time[0],dp[1]=time[1];
         for(i=2;i<n;i++)
    dp[i%3] = min(dp[(i-2)%3]+time[0]+time[i]+time[1]*2 , dp[(i-1)%3]+time[0]+time[i]);
         cout <<dp[(n-1)%3] << endl;        
     }
     return 0;    
}