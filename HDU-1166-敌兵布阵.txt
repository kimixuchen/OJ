/* 
HDU:1166 µÐ±ø²¼Õó
2015-07-18 12:22:45
XuChen*/
#include <cstdio>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <algorithm>
#include <queue>
using namespace std;

const int N = 50000;

int sum[N<<2];

void pushPlus(int rt)
{
	sum[rt] = sum[rt<<1] + sum[rt<<1|1];
}

void build(int rt, int l, int r)
{
	if(l==r)
	{
		scanf("%d", &sum[rt]);
		return;
	}
	
	int m = l+(r-l)/2;
	build(rt<<1, l, m);
	build(rt<<1|1, m+1, r);
	
	pushPlus(rt);
}

int query(int rt, int ql, int qr, int l, int r)
{
	if(ql<=l && qr>=r)
		return sum[rt];
	
	int m = l+(r-l)/2;
	int ans=0;
	if(ql<=m)
		ans+=query(rt<<1, ql, qr, l, m);
	if(qr>m)
		ans+=query(rt<<1|1, ql, qr, m+1, r);
	
	return ans;
}

void update(int rt, int q, int add, int l, int r)
{
	if(l == r)
	{
		sum[rt]+=add;
		return;
	}
	int m = l+(r-l)/2;
	if(q<=m)
		update(rt<<1, q, add, l, m);
	else
		update(rt<<1|1, q, add, m+1, r);
	
	pushPlus(rt);
}

int main()
{
	int T, n, a, b;
	scanf("%d", &T);
	
	for(int i=1; i<=T; i++)
	{
		printf("Case %d:\n", i);
		scanf("%d", &n);
		build(1, 1, n);
		
		char op[10];
		while(scanf("%s", op) && 'E'!=op[0])
		{
			scanf("%d%d", &a, &b);
			if('Q'==op[0])
				printf("%d\n", query(1, a, b, 1, n));
			else if('A' == op[0])
				update(1, a, b, 1, n);
			else 
				update(1, a, -b, 1, n);
		}
		
	}
	return 0;
}
